FROM python:3.11-slim

# Set ENV vars
ENV PYTHONPATH=/app
# ensure pipx installs executables here:
ENV PATH="/root/.local/bin:${PATH}"


# Install OS buildâ€‘tools and pipx
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      make \
      curl && \
    rm -rf /var/lib/apt/lists/*

# Working directory
WORKDIR /app

# Copy the rest of the application
COPY . /app

RUN pip install --upgrade pip

# Setup Poetry

RUN make setup_poetry ROOT="true"
RUN poetry config virtualenvs.create false 
RUN make install_dependecies_no_dev


#######

# RUN pip install poetry==1.4.2

# ENV POETRY_NO_INTERACTION=1 \
#     POETRY_VIRTUALENVS_IN_PROJECT=1 \
#     POETRY_VIRTUALENVS_CREATE=1 \
#     POETRY_CACHE_DIR=/tmp/poetry_cache

# WORKDIR /app

# COPY pyproject.toml poetry.lock ./
# RUN touch README.md

# RUN --mount=type=cache,target=$POETRY_CACHE_DIR poetry install --without dev --no-root

# FROM python:3.11-slim-buster as runtime

# ENV VIRTUAL_ENV=/app/.venv \
#     PATH="/app/.venv/bin:$PATH"


# # Copy the rest of the application
# COPY . /app

# Expose FastAPI app port
EXPOSE 8080

# Run the FastAPI app (assumes it lives in mlops/app/app.py)
CMD ["poetry", "run", "uvicorn", "app.app:app", "--host", "0.0.0.0", "--port", "8080"]
